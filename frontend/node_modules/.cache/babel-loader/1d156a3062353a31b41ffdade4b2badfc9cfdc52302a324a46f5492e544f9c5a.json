{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u0438\\u044F\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\calendar-testovoe\\\\todo-calendar\\\\src\\\\components\\\\Popup\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Popup = _ref => {\n  _s();\n  let {\n    isPopupOpen,\n    setIsPopupOpen\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    setIsOpen(isPopupOpen);\n  }, [isPopupOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popupOuter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  children: \"Title: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  children: \"Description: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"50\",\n                  type: \"text\",\n                  id: \"description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"time\",\n                  children: \"Time: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonWrappers\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"saveButton\",\n                  onClick: () => {\n                    setIsOpen(false);\n                    setIsPopupOpen(false);\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancelButton\",\n                  onClick: () => {\n                    setIsOpen(false);\n                    setIsPopupOpen(false);\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n};\n_s(Popup, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","useEffect","Popup","isPopupOpen","setIsPopupOpen","isOpen","setIsOpen"],"sources":["C:/Users/Юлия/OneDrive/Рабочий стол/calendar-testovoe/todo-calendar/src/components/Popup/Popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Popup.css'\r\n\r\nconst Popup = ({ isPopupOpen, setIsPopupOpen }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsOpen(isPopupOpen);\r\n    }, [isPopupOpen])\r\n\r\n    return (\r\n        <>\r\n            {isOpen && (<div className='popupOuter'>\r\n                <div className='popup'>\r\n                    <div className='formWrapper'>\r\n                        <form>\r\n                            <ul className=\"wrapper\">\r\n                                <li className=\"field\">\r\n                                    <label htmlFor=\"title\">Title: </label>\r\n                                    <input type=\"text\" id=\"title\" />\r\n                                </li>\r\n                                <li className=\"field\">\r\n                                    <label htmlFor=\"description\">Description: </label>\r\n                                    <textarea rows=\"50\" type=\"text\" id=\"description\" />\r\n                                </li>\r\n                                <li className=\"field\">\r\n                                    <label htmlFor=\"time\">Time: </label>\r\n                                    <input type=\"date\" id=\"time\" />\r\n                                </li>\r\n\r\n                                <div className='buttonWrappers'>\r\n                                    <button type='submit' className='saveButton' onClick={() => { setIsOpen(false); setIsPopupOpen(false) }}>\r\n                                        Save\r\n                                    </button>\r\n                                    <button className='cancelButton' onClick={() => { setIsOpen(false); setIsPopupOpen(false) }}>\r\n                                        Cancel\r\n                                    </button>\r\n                                </div>\r\n                            </ul>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAA;AAAA;AAEpB,MAAMC,KAAK,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,WAAW;IAAEC;EAAe,CAAC;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZK,SAAS,CAACH,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACI;IAAA,UACKE,MAAM,iBAAK;MAAK,SAAS,EAAC,YAAY;MAAA,uBACnC;QAAK,SAAS,EAAC,OAAO;QAAA,uBAClB;UAAK,SAAS,EAAC,aAAa;UAAA,uBACxB;YAAA,uBACI;cAAI,SAAS,EAAC,SAAS;cAAA,wBACnB;gBAAI,SAAS,EAAC,OAAO;gBAAA,wBACjB;kBAAO,OAAO,EAAC,OAAO;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAgB,eACtC;kBAAO,IAAI,EAAC,MAAM;kBAAC,EAAE,EAAC;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC/B,eACL;gBAAI,SAAS,EAAC,OAAO;gBAAA,wBACjB;kBAAO,OAAO,EAAC,aAAa;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAsB,eAClD;kBAAU,IAAI,EAAC,IAAI;kBAAC,IAAI,EAAC,MAAM;kBAAC,EAAE,EAAC;gBAAa;kBAAA;kBAAA;kBAAA;gBAAA,QAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAClD,eACL;gBAAI,SAAS,EAAC,OAAO;gBAAA,wBACjB;kBAAO,OAAO,EAAC,MAAM;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAe,eACpC;kBAAO,IAAI,EAAC,MAAM;kBAAC,EAAE,EAAC;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA,QAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC9B,eAEL;gBAAK,SAAS,EAAC,gBAAgB;gBAAA,wBAC3B;kBAAQ,IAAI,EAAC,QAAQ;kBAAC,SAAS,EAAC,YAAY;kBAAC,OAAO,EAAE,MAAM;oBAAEC,SAAS,CAAC,KAAK,CAAC;oBAAEF,cAAc,CAAC,KAAK,CAAC;kBAAC,CAAE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAE/F,eACT;kBAAQ,SAAS,EAAC,cAAc;kBAAC,OAAO,EAAE,MAAM;oBAAEE,SAAS,CAAC,KAAK,CAAC;oBAAEF,cAAc,CAAC,KAAK,CAAC;kBAAC,CAAE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAEnF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACP;YAAA;cAAA;cAAA;cAAA;YAAA;UACL;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA;MAEL;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EAET,iBACF;AAEX,CAAC;AAAA,GA5CKF,KAAK;AAAA,KAALA,KAAK;AA8CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}