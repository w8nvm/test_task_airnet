{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u0438\\u044F\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\calendar-testovoe\\\\todo-calendar\\\\src\\\\components\\\\Popup\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Popup = isPopupOpen => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popupOuter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"This is the content of the pop-up.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          children: \"Close Pop-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n};\n_s(Popup, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","useEffect","Popup","isPopupOpen","isOpen","setIsOpen"],"sources":["C:/Users/Юлия/OneDrive/Рабочий стол/calendar-testovoe/todo-calendar/src/components/Popup/Popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Popup.css'\r\n\r\nconst Popup = (isPopupOpen) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            {isOpen && (<div className='popupOuter'>\r\n                <div className='popup'>\r\n                    <div>\r\n                        This is the content of the pop-up.\r\n                    </div>\r\n                    <button onClick={() => setIsOpen(false)}>\r\n                        Close Pop-up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAA;AAAA;AAEpB,MAAMC,KAAK,GAAIC,WAAW,IAAK;EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE3C,oBACI;IAAA,UACKI,MAAM,iBAAK;MAAK,SAAS,EAAC,YAAY;MAAA,uBACnC;QAAK,SAAS,EAAC,OAAO;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEM,eACN;UAAQ,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAK,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE/B;MAAA;QAAA;QAAA;QAAA;MAAA;IACP;MAAA;MAAA;MAAA;IAAA;EAET,iBACF;AAEX,CAAC;AAAA,GAlBKH,KAAK;AAAA,KAALA,KAAK;AAoBX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}