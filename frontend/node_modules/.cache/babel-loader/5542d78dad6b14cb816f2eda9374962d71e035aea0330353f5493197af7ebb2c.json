{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u0438\\u044F\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\calendar-testovoe\\\\todo-calendar\\\\src\\\\components\\\\CalendarGrid\\\\CalendarGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./CalendarGrid.css\";\nimport { numOfDays, week, months } from '../../data/data';\nimport Header from '../Header/Header';\nimport Popup from '../Popup/Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarGrid = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [pickedDate, setPickedDate] = useState(new Date());\n  const [animation, setAnimation] = useState(0);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const firstDayOfTheMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n  const firstDayOfTheView = new Date(firstDayOfTheMonth);\n  firstDayOfTheView.setDate(firstDayOfTheView.getDate() - (firstDayOfTheMonth.getDay() || 7) + 1);\n  // console.log(firstDayOfTheMonth);\n\n  const days = [...Array(numOfDays)].map((el, ind) => {\n    let day = new Date(firstDayOfTheView);\n    day.setDate(day.getDate() + ind);\n    return day;\n  });\n  const prevHandler = () => {\n    setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() - 1)));\n  };\n  const todayHandler = () => {\n    setCurrentDate(new Date());\n  };\n  const nextHandler = () => {\n    setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() + 1)));\n  };\n\n  // console.log(days);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarWrapper\",\n    onAnimationEnd: () => setAnimation(0),\n    animation: animation,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentDate: currentDate,\n      prevHandler: () => {\n        prevHandler();\n        setAnimation(0);\n      },\n      todayHandler: () => {\n        todayHandler();\n        setAnimation(0);\n      },\n      nextHandler: () => {\n        nextHandler();\n        setAnimation(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verticalLineWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verticalLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridWrapper\",\n        children: [week.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weekday\",\n          children: element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)), days.map(i => {\n          const today = i.getMonth() === new Date().getMonth() && i.getDate() === new Date().getDate() && i.getFullYear() === new Date().getFullYear();\n          const beforeToday = i < new Date() && !today;\n          const weekend = i.getDay() === 6 || i.getDay() === 0;\n          const dayWrapperClassname = `dayWrapper ${today ? 'today' : ''}`;\n          const cellWrapperClassname = `cellWrapper ${today ? 'today' : ''}${beforeToday ? 'beforeToday' : ''} ${weekend ? 'weekend' : ''}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cellWrapperClassname,\n            onClick: () => {\n              setPickedDate(i);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"taskAddingButton\",\n              style: {\n                display: beforeToday ? 'none' : ''\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"addButtonText\",\n                onClick: () => setIsPopupOpen(!isPopupOpen),\n                children: \" Add task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rowInCell\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: dayWrapperClassname,\n                children: i.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, i.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 32\n          }, this);\n        })]\n      }, currentDate, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pickedDate\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", pickedDate === null || pickedDate === void 0 ? void 0 : pickedDate.getDate(), \" \", months[pickedDate === null || pickedDate === void 0 ? void 0 : pickedDate.getMonth()], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      isPopupOpen: isPopupOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarGrid, \"73QgHqICTwoBhl34wooiet9OrwE=\");\n_c = CalendarGrid;\nexport default CalendarGrid;\nvar _c;\n$RefreshReg$(_c, \"CalendarGrid\");","map":{"version":3,"names":["React","useState","numOfDays","week","months","Header","Popup","CalendarGrid","currentDate","setCurrentDate","Date","pickedDate","setPickedDate","animation","setAnimation","isPopupOpen","setIsPopupOpen","firstDayOfTheMonth","getFullYear","getMonth","firstDayOfTheView","setDate","getDate","getDay","days","Array","map","el","ind","day","prevHandler","setMonth","todayHandler","nextHandler","element","i","today","beforeToday","weekend","dayWrapperClassname","cellWrapperClassname","display","toString"],"sources":["C:/Users/Юлия/OneDrive/Рабочий стол/calendar-testovoe/todo-calendar/src/components/CalendarGrid/CalendarGrid.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./CalendarGrid.css\"\r\nimport { numOfDays, week, months } from '../../data/data';\r\nimport Header from '../Header/Header';\r\nimport Popup from '../Popup/Popup';\r\n\r\n\r\nconst CalendarGrid = () => {\r\n\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [pickedDate, setPickedDate] = useState(new Date());\r\n    const [animation, setAnimation] = useState(0);\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const firstDayOfTheMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n    const firstDayOfTheView = new Date(firstDayOfTheMonth);\r\n    firstDayOfTheView.setDate(firstDayOfTheView.getDate() - (firstDayOfTheMonth.getDay() || 7) + 1);\r\n    // console.log(firstDayOfTheMonth);\r\n\r\n\r\n    const days = [...Array(numOfDays)].map((el, ind) => {\r\n        let day = new Date(firstDayOfTheView);\r\n        day.setDate(day.getDate() + ind);\r\n        return day\r\n    });\r\n\r\n    const prevHandler = () => {\r\n        setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() - 1)));\r\n    };\r\n\r\n    const todayHandler = () => {\r\n        setCurrentDate(new Date());\r\n    };\r\n\r\n    const nextHandler = () => {\r\n        setCurrentDate(new Date(currentDate.setMonth(currentDate.getMonth() + 1)));\r\n    };\r\n\r\n    // console.log(days);\r\n\r\n    return (\r\n        <div\r\n            className='calendarWrapper'\r\n            onAnimationEnd={() => setAnimation(0)}\r\n            animation={animation}\r\n        >\r\n            <Header\r\n                currentDate={currentDate}\r\n                prevHandler={() => {\r\n                    prevHandler();\r\n                    setAnimation(0);\r\n                }}\r\n                todayHandler={() => {\r\n                    todayHandler();\r\n                    setAnimation(0);\r\n                }}\r\n                nextHandler={() => {\r\n                    nextHandler();\r\n                    setAnimation(0);\r\n                }}\r\n            />\r\n            <div className='verticalLineWrapper'>\r\n                <div className='verticalLine' />\r\n                <div key={currentDate} className='gridWrapper'>\r\n                    {week.map(element =>\r\n                        <div className='weekday'>\r\n                            {element}\r\n                        </div>\r\n                    )}\r\n                    {days.map((i) => {\r\n                        const today =\r\n                            i.getMonth() === new Date().getMonth() &&\r\n                            i.getDate() === new Date().getDate() &&\r\n                            i.getFullYear() === new Date().getFullYear();\r\n                        const beforeToday = i < new Date() && !today;\r\n                        const weekend = i.getDay() === 6 || i.getDay() === 0;\r\n                        const dayWrapperClassname = `dayWrapper ${today ? 'today' : ''}`;\r\n                        const cellWrapperClassname = `cellWrapper ${today ? 'today' : ''}${beforeToday ? 'beforeToday' : ''} ${weekend ? 'weekend' : ''}`;\r\n                        return <div key={i.toString()}\r\n                            className={cellWrapperClassname}\r\n                            onClick={() => {\r\n                                setPickedDate(i);\r\n                            }}>\r\n                            <button className='taskAddingButton' style={{ display: beforeToday ? 'none' : '' }} >\r\n                                <p className='addButtonText' onClick={() => setIsPopupOpen(!isPopupOpen)}> Add task </p>\r\n                            </button>\r\n                            <div className='rowInCell'>\r\n                                <div className={dayWrapperClassname}>\r\n                                    {i.getDate()}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    )}\r\n                </div>\r\n                <div className='pickedDate'>\r\n                    <h1> {pickedDate?.getDate()} {months[pickedDate?.getMonth()]} </h1>\r\n                </div>\r\n            </div>\r\n            <Popup isPopupOpen={isPopupOpen}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarGrid\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACzD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,gBAAgB;AAAC;AAGnC,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,EAAE,CAAC;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAIS,IAAI,EAAE,CAAC;EACxD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMgB,kBAAkB,GAAG,IAAIP,IAAI,CAACF,WAAW,CAACU,WAAW,EAAE,EAAEV,WAAW,CAACW,QAAQ,EAAE,EAAE,CAAC,CAAC;EACzF,MAAMC,iBAAiB,GAAG,IAAIV,IAAI,CAACO,kBAAkB,CAAC;EACtDG,iBAAiB,CAACC,OAAO,CAACD,iBAAiB,CAACE,OAAO,EAAE,IAAIL,kBAAkB,CAACM,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/F;;EAGA,MAAMC,IAAI,GAAG,CAAC,GAAGC,KAAK,CAACvB,SAAS,CAAC,CAAC,CAACwB,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;IAChD,IAAIC,GAAG,GAAG,IAAInB,IAAI,CAACU,iBAAiB,CAAC;IACrCS,GAAG,CAACR,OAAO,CAACQ,GAAG,CAACP,OAAO,EAAE,GAAGM,GAAG,CAAC;IAChC,OAAOC,GAAG;EACd,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAG,MAAM;IACtBrB,cAAc,CAAC,IAAIC,IAAI,CAACF,WAAW,CAACuB,QAAQ,CAACvB,WAAW,CAACW,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMa,YAAY,GAAG,MAAM;IACvBvB,cAAc,CAAC,IAAIC,IAAI,EAAE,CAAC;EAC9B,CAAC;EAED,MAAMuB,WAAW,GAAG,MAAM;IACtBxB,cAAc,CAAC,IAAIC,IAAI,CAACF,WAAW,CAACuB,QAAQ,CAACvB,WAAW,CAACW,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9E,CAAC;;EAED;;EAEA,oBACI;IACI,SAAS,EAAC,iBAAiB;IAC3B,cAAc,EAAE,MAAML,YAAY,CAAC,CAAC,CAAE;IACtC,SAAS,EAAED,SAAU;IAAA,wBAErB,QAAC,MAAM;MACH,WAAW,EAAEL,WAAY;MACzB,WAAW,EAAE,MAAM;QACfsB,WAAW,EAAE;QACbhB,YAAY,CAAC,CAAC,CAAC;MACnB,CAAE;MACF,YAAY,EAAE,MAAM;QAChBkB,YAAY,EAAE;QACdlB,YAAY,CAAC,CAAC,CAAC;MACnB,CAAE;MACF,WAAW,EAAE,MAAM;QACfmB,WAAW,EAAE;QACbnB,YAAY,CAAC,CAAC,CAAC;MACnB;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ,eACF;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAChC;QAAK,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAChC;QAAuB,SAAS,EAAC,aAAa;QAAA,WACzCX,IAAI,CAACuB,GAAG,CAACQ,OAAO,iBACb;UAAK,SAAS,EAAC,SAAS;UAAA,UACnBA;QAAO;UAAA;UAAA;UAAA;QAAA,QACN,CACT,EACAV,IAAI,CAACE,GAAG,CAAES,CAAC,IAAK;UACb,MAAMC,KAAK,GACPD,CAAC,CAAChB,QAAQ,EAAE,KAAK,IAAIT,IAAI,EAAE,CAACS,QAAQ,EAAE,IACtCgB,CAAC,CAACb,OAAO,EAAE,KAAK,IAAIZ,IAAI,EAAE,CAACY,OAAO,EAAE,IACpCa,CAAC,CAACjB,WAAW,EAAE,KAAK,IAAIR,IAAI,EAAE,CAACQ,WAAW,EAAE;UAChD,MAAMmB,WAAW,GAAGF,CAAC,GAAG,IAAIzB,IAAI,EAAE,IAAI,CAAC0B,KAAK;UAC5C,MAAME,OAAO,GAAGH,CAAC,CAACZ,MAAM,EAAE,KAAK,CAAC,IAAIY,CAAC,CAACZ,MAAM,EAAE,KAAK,CAAC;UACpD,MAAMgB,mBAAmB,GAAI,cAAaH,KAAK,GAAG,OAAO,GAAG,EAAG,EAAC;UAChE,MAAMI,oBAAoB,GAAI,eAAcJ,KAAK,GAAG,OAAO,GAAG,EAAG,GAAEC,WAAW,GAAG,aAAa,GAAG,EAAG,IAAGC,OAAO,GAAG,SAAS,GAAG,EAAG,EAAC;UACjI,oBAAO;YACH,SAAS,EAAEE,oBAAqB;YAChC,OAAO,EAAE,MAAM;cACX5B,aAAa,CAACuB,CAAC,CAAC;YACpB,CAAE;YAAA,wBACF;cAAQ,SAAS,EAAC,kBAAkB;cAAC,KAAK,EAAE;gBAAEM,OAAO,EAAEJ,WAAW,GAAG,MAAM,GAAG;cAAG,CAAE;cAAA,uBAC/E;gBAAG,SAAS,EAAC,eAAe;gBAAC,OAAO,EAAE,MAAMrB,cAAc,CAAC,CAACD,WAAW,CAAE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAe;cAAA;cAAA;cAAA;YAAA,QACnF,eACT;cAAK,SAAS,EAAC,WAAW;cAAA,uBACtB;gBAAK,SAAS,EAAEwB,mBAAoB;gBAAA,UAC/BJ,CAAC,CAACb,OAAO;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YACV;cAAA;cAAA;cAAA;YAAA,QAEJ;UAAA,GAbOa,CAAC,CAACO,QAAQ,EAAE;YAAA;YAAA;YAAA;UAAA,QAcvB;QACV,CAAC,CACA;MAAA,GA/BKlC,WAAW;QAAA;QAAA;QAAA;MAAA,QAgCf,eACN;QAAK,SAAS,EAAC,YAAY;QAAA,uBACvB;UAAA,gBAAMG,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEW,OAAO,EAAE,OAAGlB,MAAM,CAACO,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEQ,QAAQ,EAAE,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QACjE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN,QAAC,KAAK;MAAC,WAAW,EAAEJ;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEd,CAAC;AAAA,GA/FKR,YAAY;AAAA,KAAZA,YAAY;AAiGlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}