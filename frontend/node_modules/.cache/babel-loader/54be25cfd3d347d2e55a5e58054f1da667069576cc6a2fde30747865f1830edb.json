{"ast":null,"code":"const {\n  request\n} = require('https');\nconst debug = require('debug')('isdayoff');\nconst formatDate = date => {\n  const y = `0000${date.getFullYear()}`.slice(-4);\n  const m = `00${date.getMonth() + 1}`.slice(-2);\n  const d = `00${date.getDate()}`.slice(-2);\n  return `${y}${m}${d}`;\n};\nconst callApi = _ref => {\n  let {\n    year = new Date().getFullYear(),\n    month,\n    date,\n    start,\n    end,\n    country,\n    pre,\n    covid\n  } = _ref;\n  return new Promise((resolve, reject) => {\n    let buffer = '';\n    const options = {\n      hostname: 'isdayoff.ru',\n      method: 'GET'\n    };\n    if (typeof year !== 'undefined') {\n      options.path = `/api/getData?year=${year}`;\n      if (typeof month !== 'undefined') {\n        options.path += `&month=${`00${month + 1}`.slice(-2)}`;\n        if (typeof date !== 'undefined') {\n          options.path += `&day=${`00${date}`.slice(-2)}`;\n        }\n      }\n    }\n    if (typeof start !== 'undefined') {\n      options.path = `/api/getData?date1=${formatDate(start)}`;\n      if (typeof end !== 'undefined') {\n        options.path += `&date2=${formatDate(end)}`;\n      }\n    }\n    if (typeof country !== 'undefined') {\n      options.path += `&cc=${country}`;\n    }\n    if (typeof pre !== 'undefined') {\n      options.path += `&pre=${pre ? 1 : 0}`;\n    }\n    if (typeof covid !== 'undefined') {\n      options.path += `&covid=${covid ? 1 : 0}`;\n    }\n    debug(`URL: ${options.hostname}${options.path}`);\n    const req = request(options, res => {\n      debug(`STATUS: ${res.statusCode}`);\n      res.on('data', chunk => {\n        debug(`BODY: ${chunk}`);\n        buffer += chunk;\n      });\n      res.on('end', () => {\n        switch (buffer) {\n          // case '0':\n          // case '1':\n          // case '2':\n          // case '4':\n          //   return resolve(+buffer);\n          case '100':\n            return reject(new Error('Invalid date (response code: 100)'));\n          case '101':\n            return reject(new Error('Data not found (response code: 101)'));\n          case '199':\n            return reject(new Error('Service error (response code: 199)'));\n          default:\n            if (/[0124]+/.test(buffer)) return resolve(buffer);\n            return reject(new Error(`Unexpected response: ${buffer}`));\n        }\n      });\n    });\n    req.on('error', err => {\n      reject(err);\n    });\n    req.end();\n  });\n};\nclass IsDayOffAPI {\n  async today(options) {\n    const now = new Date();\n    const res = await this.getRawData({\n      ...options,\n      year: now.getFullYear(),\n      month: now.getMonth(),\n      date: now.getDate()\n    });\n    return +res;\n  }\n  async month() {\n    let {\n      year = new Date().getFullYear(),\n      month = new Date().getMonth(),\n      date,\n      // remove from request if any\n      ...options\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.getData({\n      year,\n      month,\n      ...options\n    });\n  }\n  async year() {\n    let {\n      year = new Date().getFullYear(),\n      month,\n      // remove from request if any\n      date,\n      // remove from request if any\n      ...options\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.getData({\n      year,\n      ...options\n    });\n  }\n  async date() {\n    let {\n      year = new Date().getFullYear(),\n      month = new Date().getMonth(),\n      date = new Date().getDate(),\n      ...options\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return +(await this.getRawData({\n      year,\n      month,\n      date,\n      ...options\n    }));\n  }\n  async period(_ref2) {\n    let {\n      start,\n      end,\n      year,\n      // remove from request if any\n      month,\n      // remove from request if any\n      date,\n      // remove from request if any\n      ...options\n    } = _ref2;\n    const res = await this.getRawData({\n      start,\n      end,\n      ...options\n    });\n    return res.split('').map(item => Number(item));\n  }\n  async getData(_ref3) {\n    let {\n      year = new Date().getFullYear(),\n      ...options\n    } = _ref3;\n    const res = await this.getRawData({\n      year,\n      ...options\n    });\n    return res.split('').map(item => Number(item));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRawData(options) {\n    return callApi(options);\n  }\n}\nmodule.exports = IsDayOffAPI;","map":{"version":3,"names":["request","require","debug","formatDate","date","y","getFullYear","slice","m","getMonth","d","getDate","callApi","year","Date","month","start","end","country","pre","covid","Promise","resolve","reject","buffer","options","hostname","method","path","req","res","statusCode","on","chunk","Error","test","err","IsDayOffAPI","today","now","getRawData","getData","period","split","map","item","Number","module","exports"],"sources":["C:/Users/Юлия/OneDrive/Рабочий стол/calendar-testovoe/todo-calendar/node_modules/isdayoff/lib/api.js"],"sourcesContent":["const { request } = require('https');\nconst debug = require('debug')('isdayoff');\n\nconst formatDate = (date) => {\n  const y = `0000${date.getFullYear()}`.slice(-4);\n  const m = `00${date.getMonth() + 1}`.slice(-2);\n  const d = `00${date.getDate()}`.slice(-2);\n  return `${y}${m}${d}`;\n};\n\nconst callApi = ({\n  year = (new Date()).getFullYear(),\n  month,\n  date,\n  start,\n  end,\n  country,\n  pre,\n  covid\n}) => new Promise((resolve, reject) => {\n  let buffer = '';\n\n  const options = {\n    hostname: 'isdayoff.ru',\n    method: 'GET'\n  };\n  if (typeof year !== 'undefined') {\n    options.path = `/api/getData?year=${year}`;\n    if (typeof month !== 'undefined') {\n      options.path += `&month=${`00${month + 1}`.slice(-2)}`;\n      if (typeof date !== 'undefined') {\n        options.path += `&day=${`00${date}`.slice(-2)}`;\n      }\n    }\n  }\n  if (typeof start !== 'undefined') {\n    options.path = `/api/getData?date1=${formatDate(start)}`;\n    if (typeof end !== 'undefined') {\n      options.path += `&date2=${formatDate(end)}`;\n    }\n  }\n\n  if (typeof country !== 'undefined') {\n    options.path += `&cc=${country}`;\n  }\n  if (typeof pre !== 'undefined') {\n    options.path += `&pre=${pre ? 1 : 0}`;\n  }\n  if (typeof covid !== 'undefined') {\n    options.path += `&covid=${covid ? 1 : 0}`;\n  }\n\n  debug(`URL: ${options.hostname}${options.path}`);\n  const req = request(options, (res) => {\n    debug(`STATUS: ${res.statusCode}`);\n\n    res.on('data', (chunk) => {\n      debug(`BODY: ${chunk}`);\n      buffer += chunk;\n    });\n    res.on('end', () => {\n      switch (buffer) {\n        // case '0':\n        // case '1':\n        // case '2':\n        // case '4':\n        //   return resolve(+buffer);\n        case '100':\n          return reject(new Error('Invalid date (response code: 100)'));\n        case '101':\n          return reject(new Error('Data not found (response code: 101)'));\n        case '199':\n          return reject(new Error('Service error (response code: 199)'));\n        default:\n          if (/[0124]+/.test(buffer)) return resolve(buffer);\n          return reject(new Error(`Unexpected response: ${buffer}`));\n      }\n    });\n  });\n\n  req.on('error', (err) => {\n    reject(err);\n  });\n\n  req.end();\n});\n\nclass IsDayOffAPI {\n  async today(options) {\n    const now = new Date();\n    const res = await this.getRawData({\n      ...options,\n      year: now.getFullYear(),\n      month: now.getMonth(),\n      date: now.getDate()\n    });\n\n    return +res;\n  }\n\n  async month({\n    year = (new Date()).getFullYear(),\n    month = (new Date()).getMonth(),\n    date, // remove from request if any\n    ...options\n  } = {}) {\n    return this.getData({ year, month, ...options });\n  }\n\n  async year({\n    year = (new Date()).getFullYear(),\n    month, // remove from request if any\n    date, // remove from request if any\n    ...options\n  } = {}) {\n    return this.getData({ year, ...options });\n  }\n\n  async date({\n    year = (new Date()).getFullYear(),\n    month = (new Date()).getMonth(),\n    date = (new Date()).getDate(),\n    ...options\n  } = {}) {\n    return +(await this.getRawData({\n      year, month, date, ...options\n    }));\n  }\n\n  async period({\n    start,\n    end,\n    year, // remove from request if any\n    month, // remove from request if any\n    date, // remove from request if any\n    ...options\n  }) {\n    const res = await this.getRawData({ start, end, ...options });\n    return res.split('').map((item) => Number(item));\n  }\n\n  async getData({\n    year = (new Date()).getFullYear(),\n    ...options\n  }) {\n    const res = await this.getRawData({ year, ...options });\n    return res.split('').map((item) => Number(item));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRawData(options) {\n    return callApi(options);\n  }\n}\n\nmodule.exports = IsDayOffAPI;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}