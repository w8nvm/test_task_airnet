{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042E\\u043B\\u0438\\u044F\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\calendar-testovoe\\\\todo-calendar\\\\src\\\\components\\\\Popup\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = isPopupOpen => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    setIsOpen(isPopupOpen);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(true),\n      children: \"Open Pop-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"This is the content of the pop-up.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        children: \"Close Pop-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(Popup, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","useEffect","Popup","isPopupOpen","isOpen","setIsOpen"],"sources":["C:/Users/Юлия/OneDrive/Рабочий стол/calendar-testovoe/todo-calendar/src/components/Popup/Popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Popup = (isPopupOpen) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsOpen(isPopupOpen);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setIsOpen(true)}>\r\n                Open Pop-up\r\n            </button>\r\n            {isOpen && (\r\n                <div>\r\n                    <div>\r\n                        This is the content of the pop-up.\r\n                    </div>\r\n                    <button onClick={() => setIsOpen(false)}>\r\n                        Close Pop-up\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAElD,MAAMC,KAAK,GAAIC,WAAW,IAAK;EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZI,SAAS,CAACF,WAAW,CAAC;EAC1B,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAE,MAAME,SAAS,CAAC,IAAI,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE9B,EACRD,MAAM,iBACH;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEM,eACN;QAAQ,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/B;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAA,GAxBKH,KAAK;AAAA,KAALA,KAAK;AA0BX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}